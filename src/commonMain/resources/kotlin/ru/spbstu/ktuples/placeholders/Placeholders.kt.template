@file:Suppress("UNUSED_PARAMETER", "NOTHING_TO_INLINE")
package ru.spbstu.ktuples.placeholders

import ru.spbstu.ktuples.*
import kotlin.jvm.JvmName

<%
def k = number
%>

open class Placeholder(val index: Int)
<% k.times { m ->
%>
object _$m: Placeholder($m)
<% } // k.times %>

<% k.times { m ->
       def tls = m.join{ "T$it" }
       def vs = m.join{ "v$it" }
       def vts = m.join{ "v$it: T$it" }
       m.times { i ->
            def vts_ = ((0..<m) - i).repeat{ "v$it: T$it" }
            def tls_ = ((0..<m) - i).repeat{ "T$it" }
%>
/**
 * Create a function with the same effect, but parameter #$i fixed to [v$i]
 */
inline fun<$tls, R> (($tls) -> R).bind(@Suppress("UNUSED_PARAMETER") ignore: _$i, v$i: T$i): ($tls_) -> R =
    { $vts_ -> invoke($vs) }
/**
* Create a function with the same effect, but parameter #$i fixed to [v$i]
*/
@JvmName("bind2")
inline fun<$tls, R> bind(crossinline f: ($tls) -> R, @Suppress("UNUSED_PARAMETER") ignore: _$i, v$i: T$i): ($tls_) -> R =
    { $vts_ -> f($vs) }

inline operator fun <$tls> Tuple$m<$tls>.get(@Suppress("UNUSED_PARAMETER") ignore: _$i): T$i = v$i
<%     } // m.times
   } // k.times
%>

